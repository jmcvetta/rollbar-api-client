name: Terraform Compatibility
on: [push]

jobs:
  latest:
    name: Latest
    runs-on: ubuntu-latest

    env:
      ROLLBAR_API_KEY: ${{ secrets.ROLLBAR_API_KEY }}

    steps:

      # Install Go and Terraform
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - uses: actions/setup-go@v2

      # Checkout
      - uses: actions/checkout@v2

      # Restore cache
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Build
      - name: Download dependencies
        run: go get

      # Test provider with real Terraform
      - name: Install
        run: make install
      - name: Initialize Terraform
        run: terraform init
        working-directory: ./example
      - name: Terraform plan
        run: terraform plan -var 'rollbar_token=${{ secrets.ROLLBAR_TOKEN }}'
        working-directory: ./example
        env:
          ROLLBAR_TOKEN: ${{ secrets.ROLLBAR_TOKEN }}

  terraform012:
    name: 0.12.x
    runs-on: ubuntu-latest

    env:
      ROLLBAR_API_KEY: ${{ secrets.ROLLBAR_API_KEY }}

    steps:

      # Install Go and Terraform
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
          terraform_version: 0.12.29
      - uses: actions/setup-go@v2

      # Checkout
      - uses: actions/checkout@v2

      # Restore cache
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Build
      - name: Download dependencies
        run: go get

      # Test provider with real Terraform
      - name: Install
        run: make install012
      - name: Initialize Terraform
        run: terraform init
        working-directory: ./example
      - name: Terraform plan
        run: terraform plan -var 'rollbar_token=${{ secrets.ROLLBAR_TOKEN }}'
        working-directory: ./example
        env:
          ROLLBAR_TOKEN: ${{ secrets.ROLLBAR_TOKEN }}

  terraform013:
    name: 0.13.x
    runs-on: ubuntu-latest

    env:
      ROLLBAR_API_KEY: ${{ secrets.ROLLBAR_API_KEY }}

    steps:

      # Install Go and Terraform
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
          terraform_version: 0.13.5
      - uses: actions/setup-go@v2

      # Checkout
      - uses: actions/checkout@v2

      # Restore cache
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Build
      - name: Download dependencies
        run: go get

      # Test provider with real Terraform
      - name: Install
        run: make install
      - name: Initialize Terraform
        run: terraform init
        working-directory: ./example
      - name: Terraform plan
        run: terraform plan -var 'rollbar_token=${{ secrets.ROLLBAR_TOKEN }}'
        working-directory: ./example
        env:
          ROLLBAR_TOKEN: ${{ secrets.ROLLBAR_TOKEN }}
