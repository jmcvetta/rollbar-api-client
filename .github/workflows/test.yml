name: Tests
on: [push]

jobs:

  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go:
          - ""  # Latest
          - "1.15"
          - "1.14"

    steps:

      # Install Go and Terraform
      - uses: actions/setup-go@v2
        with:
          go-version: '${{ matrix.go }}'

      # Checkout
      - uses: actions/checkout@v2

      # Restore cache
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Run unit tests
      - name: Unit tests
        run: make test


  acceptance_tests:
    name: Acceptance Tests
    runs-on: ubuntu-latest

    env:
      ROLLBAR_API_KEY: ${{ secrets.ROLLBAR_API_KEY }}

    steps:

      # Install Go and Terraform
      - uses: actions/setup-go@v2

      # Checkout
      - uses: actions/checkout@v2

      # Restore cache
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Wait for up to ten minutes for previous run to complete; abort if not
      # done by then.
      - name: Block Concurrent Executions
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 10
          same-branch-only: false
          abort-after-seconds: 600
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Run acceptance tests
      - name: Acceptance tests
        run: make testacc
        env:
          TERRAFORM_PROVIDER_ROLLBAR_DEBUG: 1
          GOMAXPROCS: 8

      # Report code coverage
      - name: Convert Go coverage file to lcov format
        run: |
          go install github.com/jandelgado/gcov2lcov
          ~/go/bin/gcov2lcov -infile coverage.out -outfile lcov.info
      - uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./lcov.info
      - name: Upload coverage data to CodeClimate
        uses: paambaati/codeclimate-action@v2.7.4
        with:
          coverageLocations: |
            ${{github.workspace}}/*lcov*:lcov
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}


  terraform:
    name: Terraform Compatibility
    runs-on: ubuntu-latest
    strategy:
      matrix:
        terraform:
          - "" # Latest
          - "0.14"
          - "0.13"
          - "0.12"

    env:
      ROLLBAR_API_KEY: ${{ secrets.ROLLBAR_API_KEY }}

    steps:

      # Install Go and Terraform
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
          terraform_version: "${{ matrix.terraform }}"
      - uses: actions/setup-go@v2

      # Checkout
      - uses: actions/checkout@v2

      # Restore cache
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Install Provider
      - name: Install
        if: ${{ !startsWith(matrix.terraform, '0.12') }}
        run: make install
      - name: Install for Terraform 0.12
        if: ${{ startsWith(matrix.terraform, '0.12') }}
        run: make install012

      # Verify Terraform plan does not error
      - name: Initialize Terraform
        run: terraform init
        working-directory: ./example
      - name: Terraform plan
        run: terraform plan -var 'rollbar_token=${{ secrets.ROLLBAR_TOKEN }}'
        working-directory: ./example
        env:
          ROLLBAR_TOKEN: ${{ secrets.ROLLBAR_TOKEN }}
