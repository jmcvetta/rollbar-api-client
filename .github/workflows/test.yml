name: Tests
on:
  push:

jobs:

  #
  # Run unit tests
  #
  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go:
          - ""  # Latest
          - "1.15"
          - "1.14"

    steps:

      # Install Go
      - uses: actions/setup-go@v2
        with:
          go-version: '${{ matrix.go }}'

      # Checkout
      - uses: actions/checkout@v2

      # Restore cache
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-v${{ matrix.go }}-${{ hashFiles('**/go.sum') }}

      # Run unit tests
      - name: Unit tests
        run: go test -v ./...

  #
  # Report code coverage
  #
  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-v${{ matrix.go }}-${{ hashFiles('**/go.sum') }}
      - name: Unit tests
        run: go test -v -covermode=atomic -coverprofile=coverage.out ./...
      - name: Convert Go coverage file to lcov format
        run: |
          go install github.com/jandelgado/gcov2lcov
          ~/go/bin/gcov2lcov -infile coverage.out -outfile lcov.info
      - uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./lcov.info
      - name: Upload coverage data to CodeClimate
        uses: paambaati/codeclimate-action@v2.7.4
        with:
          coverageLocations: |
            ${{github.workspace}}/*lcov*:lcov
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

  golangci:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.36
